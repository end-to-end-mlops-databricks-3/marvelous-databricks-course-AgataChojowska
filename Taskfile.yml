version: '3'
dotenv: [.env]

vars:
  PACKAGE_IMPORT_NAME: mlops_course
  PYTHON_VERSION: 3.11

tasks:
  create-venv:
    desc: Create a virtual environment
    cmds:
      - uv venv -p {{.PYTHON_VERSION}} .venv
    silent: false

  sync-dev:
    desc: Sync project dependencies with optionals
    cmds:
      - rm -rf .venv
      - task: create-venv
      - uv sync --extra dev

  sync-test:
    desc: Sync only test dependencies
    cmds:
        - rm -rf .venv
        - task: create-venv
        - uv sync --extra test
        # - source .venv/Scripts/activate && uv sync --extra test # Activate and sync

  lint:
    desc: Run pre-commit hooks
    cmds:
      - uv run pre-commit run --all-files

  serve-latest-registered-model-locally:
    desc: Download the latest registered model from MLflow to the folder namely test-tennisprediction.
    cmds:
      # Ensure the 'test-tennisprediction' directory is clean and ready
      - rm -rf "test-{{.PACKAGE_IMPORT_NAME}}" && mkdir -p "test-{{.PACKAGE_IMPORT_NAME}}/my_model"
      # Navigate to the directory where mlruns exists and download the model into 'test-tennisprediction'
      # Reminder note -> "models:/{catalog_name}.{schema_name}.model_name" is the full model name. Please update it accordingly.
      - cd tests && uv run mlflow artifacts download --artifact-uri "mlops_dev.chojowsk.pyfunc-tennis-model@latest-model" --dst-path "../test-{{.PACKAGE_IMPORT_NAME}}/my_model"
      - cd ..
      # Serve model with mlflow locally
      - cd "test-{{.PACKAGE_IMPORT_NAME}}" && uv run mlflow models serve -m my_model --port 5088
      # Execute the following line in a separate terminal in the project folder to run the tests for local deployment validations
      # uv run pytest -v -s tests/integration_tests/test_mlflow_serve.py

  help:
    desc: Print all tasks defined in the Taskfile
    cmd: task -l
    silent: true

  default:
    cmds:
      - task: help
    silent: true
